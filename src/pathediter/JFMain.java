/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pathediter;

import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class JFMain extends javax.swing.JFrame {
    MyFileFilter filter=new MyFileFilter(new String[]{".txt",".py"});
    
    /**
     * Creates new form JFMain
     */
    public JFMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        JTFPath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jFileChooser.setCurrentDirectory(new java.io.File("D:\\"));
            jFileChooser.setDialogTitle("请选择");
            jFileChooser.setFileFilter(null);
            jFileChooser.setMinimumSize(new java.awt.Dimension(800, 600));
            jFileChooser.setPreferredSize(new java.awt.Dimension(800, 600));

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setTitle("数据源编辑器");

            JTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "变量名", "id", "css", "xpath"
                }
            ));
            JTable.setRowHeight(20);
            jScrollPane1.setViewportView(JTable);

            jButton1.setText("打开");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            jButton2.setText("保存");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            jButton3.setText("插入行");

            jButton4.setText("删除行");

            JTFPath.setEditable(false);
            JTFPath.setToolTipText("文件路径");

            jLabel1.setText("路径：");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(JTFPath, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton2)
                    .addGap(0, 51, Short.MAX_VALUE))
                .addComponent(jScrollPane1)
                .addGroup(layout.createSequentialGroup()
                    .addGap(196, 196, 196)
                    .addComponent(jButton3)
                    .addGap(56, 56, 56)
                    .addComponent(jButton4)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton4))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JTFPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addGap(62, 62, 62))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String filename =null;// "D:\\temp\\text.py.txt";
        //jFileChooser.addChoosableFileFilter(filter);//只是增加了文件过滤选项，并不是默认值
        jFileChooser.setFileFilter(filter);
        int result = jFileChooser.showOpenDialog(this);
        if (JFileChooser.APPROVE_OPTION == result) {
            filename = jFileChooser.getSelectedFile().getPath();
            System.out.println("path: " + filename);
            String s;
        try {
            s = Utils.readFile2String(filename);
            List<Path> ll = Utils.readStirng2Paths(s);
            if (null == ll) {
                JOptionPane.showMessageDialog(this, "文件格式有误，请重新选择！");

            } else {
                JTFPath.setText(filename);
                read(ll);
            }
        } catch (IOException ex) {
            Logger.getLogger(JFMain.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "文件格式有误，请重新选择！");
        }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        save();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFMain().setVisible(true);
            }
        });
    }

    public String getCellValue(int x, int y) {
        if (null == JTable.getModel().getValueAt(x, y)) {
            return "";
        }
        return JTable.getModel().getValueAt(x, y).toString();
    }

    public void save() {
        JTable.getModel().getValueAt(2, 3);
        Path path= new Path();
        StringBuilder sb = new StringBuilder("PARAMS={");
        int count = JTable.getRowCount();
        int count2 = JTable.getColumnCount();
        System.err.println("行:" + count + ",列:" + count2);
        for (int i = 0; i < count; i++) {
            path.setName(getCellValue(i, 0));
            path.setId(getCellValue(i, 1));
            path.setCss(getCellValue(i, 2));
            path.setXpath(getCellValue(i, 3));
            //System.out.println("path.setXpath(getCellValue(i, 3));:"+getCellValue(i, 3)+"i:"+i);
            //System.out.println("path.getXpath():"+path.getXpath());
            sb.append(path.toString());
            if (i < count - 1) {
                sb.append(",");
            }
        }
        sb.append("}");
        if (null == JTFPath.getText() || "" == JTFPath.getText()) {
            //应当弹出保存地址的。。。
            JOptionPane.showMessageDialog(this, "路径为空！");
            return;
        }
        if (Utils.writeFile(JTFPath.getText(), sb.toString())) {
            JOptionPane.showMessageDialog(this, "保存成功");
        } else {
            JOptionPane.showMessageDialog(this, "保存失败");
        }

        System.out.println(JTable.getRowCount());
        System.out.println(sb.toString());
    }

    public void read(List<Path> paths){ //定义表格的行数据信息容器
        Vector srcdata = new Vector();
        //初始化表格的列标题及相关的数据信息容器
        String[] columnName = {"变量名", "id", "css", "xpath"};
        //设置列标题
        Vector cname = new Vector(columnName.length);
        for (int i = 0; i < columnName.length; i++) {
            cname.add(columnName[i]);
        }

        DefaultTableModel model = new DefaultTableModel(srcdata, cname);

        JTable.setModel(model);
        //填充数据演示

        Vector rowdata = new Vector(columnName.length);
        System.out.println("xxx" + rowdata.size());
        System.out.println("paths:");
        for (Path p : paths) {
         //警告！不能依次遍历p的属性给rowdata再添加至srcdata！
            //如果依次遍历p赋给rowdata，则必须clear一下（否则旧数据将重复添加）
            //clear后会报错，数组越界，百度说是因为srcdata.add有延迟，读取到的已经时clear后的rowdata
            System.out.println("yyy" + rowdata.size());
            System.out.println(p);
//            System.out.println();
//            rowdata.add(p.getName());
//            rowdata.add(p.getId());
//            rowdata.add(p.getCss());
//            rowdata.add(p.getXpath());
//
//            System.out.println(rowdata);
//            System.out.println("zzz"+rowdata.size());

            srcdata.add(p.toVector());
            //rowdata.clear();
        }

//        rowdata.add(paths.get(0).getName());
//        rowdata.add(paths.get(0).getId());
//        rowdata.add(paths.get(0).getCss());
//        rowdata.add(paths.get(0).getXpath());
        //将数据加入到容器，也就是加入到JTable 中
        //srcdata.add(rowdata);
        //最后刷新JTable 控件
        this.JTable.repaint();
        this.JTable.updateUI();
    }
    
    public void myInit(){
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFPath;
    private javax.swing.JTable JTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
